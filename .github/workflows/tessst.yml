from django.test import TestCase
from django.urls import reverse
from django.contrib.auth.models import User
from .models import Course, Enrollment

class ELearningTestCase(TestCase):
    def setUp(self):
        # Create a test user
        self.user = User.objects.create_user(username='testuser', password='password123')
        # Create a test course
        self.course = Course.objects.create(title='Python Basics', price=100)

    def test_user_login(self):
        # Test login with valid credentials
        response = self.client.post(reverse('login'), {'username': 'testuser', 'password': 'password123'})
        self.assertEqual(response.status_code, 200)
        self.assertContains(response, 'Welcome, testuser')

        # Test login with invalid credentials
        response = self.client.post(reverse('login'), {'username': 'wronguser', 'password': 'wrongpassword'})
        self.assertNotEqual(response.status_code, 200)
        self.assertContains(response, 'Invalid username or password')

    def test_course_enrollment(self):
        # Login the user
        self.client.login(username='testuser', password='password123')

        # Enroll in a course
        response = self.client.post(reverse('enroll_course', args=[self.course.id]))
        self.assertEqual(response.status_code, 200)

        # Verify enrollment
        enrollment = Enrollment.objects.filter(user=self.user, course=self.course).first()
        self.assertIsNotNone(enrollment)

    def test_payment_for_course(self):
        # Login the user
        self.client.login(username='testuser', password='password123')

        # Simulate payment for a course
        response = self.client.post(reverse('pay_course', args=[self.course.id]), {'payment_method': 'credit_card'})
        self.assertEqual(response.status_code, 200)
        self.assertContains(response, 'Payment Successful')

        # Verify that the course is marked as paid
        enrollment = Enrollment.objects.get(user=self.user, course=self.course)
        self.assertTrue(enrollment.is_paid)

if __name__ == '__main__':
    TestCase.main()
